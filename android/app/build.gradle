plugins {
    id("com.android.application")
    id("com.facebook.react")
}

def FLIPPER_VERSION = "0.230.0"

project.ext.react = [
    enableHermes: false, // Set to false to disable Hermes
]

def enableSeparateBuildPerCPUArchitecture = false
def enableProguardInReleaseBuilds = false
def jscFlavor = 'org.webkit:android-jsc:+'
def enableHermes = project.ext.react.get("enableHermes", false)

def reactNativeArchitectures() {
    def value = project.getProperties().get("reactNativeArchitectures")
    return value ? value.split(",") : ["armeabi-v7a", "x86", "x86_64", "arm64-v8a"]
}

android {
    compileSdkVersion 34
    buildToolsVersion "34.0.0"
    namespace "com.shortsexample"

    defaultConfig {
        applicationId "com.shortsexample"
        minSdkVersion 23
        targetSdkVersion 34
        versionCode 1
        versionName "1.0"
    }

    splits {
        abi {
            reset()
            enable enableSeparateBuildPerCPUArchitecture
            universalApk false
            include(*reactNativeArchitectures())
        }
    }

    signingConfigs {
        debug {
            storeFile file('debug.keystore')
            storePassword 'android'
            keyAlias 'androiddebugkey'
            keyPassword 'android'
        }
    }

    buildTypes {
        debug {
            signingConfig signingConfigs.debug
        }
        release {
            signingConfig signingConfigs.debug
            minifyEnabled enableProguardInReleaseBuilds
            proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
}

// Task to fix autolinking after generation
task fixAutolinkingAfterGeneration {
    dependsOn 'generateReactNativeEntryPoint'
    doLast {
        def autolinkingFile = file("$buildDir/generated/autolinking/src/main/java/com/facebook/react/ReactNativeApplicationEntryPoint.java")
        if (autolinkingFile.exists()) {
            println "Fixing autolinking file: ${autolinkingFile.absolutePath}"
            def fixedContent = '''package com.facebook.react;

import android.content.Context;
import com.facebook.soloader.SoLoader;

/**
  * This class is the entry point for loading React Native using the configuration
  * that the users specifies in their .gradle files.
  *
  * The `loadReactNative(this)` method invocation should be called inside the
  * application onCreate otherwise the app won't load correctly.            
  */
public class ReactNativeApplicationEntryPoint {
  public static void loadReactNative(Context context) {
    SoLoader.init(context, /* native exopackage */ false);
  }
}'''
            autolinkingFile.text = fixedContent
            println "Fixed autolinking file successfully"
        }
    }
}

// Make compilation depend on the fix
tasks.withType(JavaCompile) {
    dependsOn fixAutolinkingAfterGeneration
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation "com.facebook.react:react-native:+"
    implementation "androidx.swiperefreshlayout:swiperefreshlayout:1.0.0"

    // Flipper Debugging - Commented out due to network issues
    // debugImplementation("com.facebook.flipper:flipper:${FLIPPER_VERSION}") {
    //     exclude group: 'com.facebook.fbjni'
    // }
    // debugImplementation("com.facebook.flipper:flipper-network-plugin:${FLIPPER_VERSION}") {
    //     exclude group: 'com.facebook.fbjni'
    // }
    // debugImplementation("com.facebook.flipper:flipper-fresco-plugin:${FLIPPER_VERSION}") {
    //     exclude group: 'com.facebook.fbjni'
    // }

    // Hermes or JSC
    if (enableHermes) {
        def hermesPath = "../../node_modules/hermes-engine/android/"
        debugImplementation files(hermesPath + "hermes-debug.aar")
        releaseImplementation files(hermesPath + "hermes-release.aar")
    } else {
        implementation jscFlavor
    }
}
